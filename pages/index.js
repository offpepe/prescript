import '../node_modules/bootstrap/dist/css/bootstrap.min.css';
import Head from 'next/head'
import { useState } from 'react';
import { Form, Button } from 'react-bootstrap'

export default function Home() {
  const [medications, setMedications] = useState([])
  const [fullname, setFullname] = useState('');
  const [copies, setCopies] = useState(1);

  const generatePDF = async () => {
    const prescriptionData = {
      fullname,
      medications,
    }

    const res = await fetch('http://localhost:3000/api/prescription/generate', {
      method: 'POST',
      body: JSON.stringify(prescriptionData),
    })
    console.log(res);

  }
  return (
    <>
      <Head>
        <title>Prescript</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container header" style={{
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        justifyContent: 'center',
        }} >
        <h1> Gerador de prescrição </h1>
      <Form style={ { width: '70%' } } >
        <Form.Group>
          <Form.Label htmlFor="name"> Nome completo </Form.Label>
          <Form.Control
            type="text"
            name="fullname"
            id="fullname"
            value={ fullname }
            onChange={ (ev) => setFullname(ev.target.value) }
            min="6"
            required
            />
          <Form.Label htmlFor="copies"> Número de cópias </Form.Label>
          <Form.Control
            type="number"
            name="copies"
            id="copies"
            defaultValue="1"
            value={ copies }
            onChange={ (ev) => setCopies(ev.target.value) }
             />
        </Form.Group>
      </Form>
        <Form
        style={ { textAlign: 'center' } }
        onSubmit={ (ev) => {
          ev.preventDefault();
          const { medName, appearance, quantity, usage } = ev.target;
          const updatedMeds = medications;
          updatedMeds.push({
            name: medName.value,
            appearance: appearance.value,
            qtd: quantity.value,
            usage: usage.value,
          })
          setMedications(updatedMeds);
          console.log(medications);
        } }
        >
          <h3 style={ { margin: '20px' } } > Medicação </h3>
          <Form.Group style={ {
            display: 'flex',
          }}>
          <div style={ { width: '60%', marginRight: '5px' } }>
          <Form.Label htmlFor="medName"> Nome da medicação </Form.Label>
          <Form.Control
            type="text"
            name="medName"
            id="medName"
            required
          />
          </div>
          <div>
          <Form.Label
            htmlFor="appearance"
          >
            Apresentação
          </Form.Label>
          <Form.Control type="text" name="appearance" id="appearance" required />
          </div>
          <div style={ { width: '15%', marginLeft: '5px' } }>
          <Form.Label htmlFor="quantity"> Quantidade </Form.Label>
          <Form.Control type="text" name="quantity" id="quantity" required />
          </div>
          </Form.Group>
          <Form.Label
           htmlFor="usage"
           > Modo de uso </Form.Label>
          <Form.Control
            as="textarea"
            name="usage"
            id="usage"
            style={ { height: '100px' } }
            required
          />
          <Button type="submit"> Gerar </Button>
        </Form>
        <Button
          variant="success"
          type="button"
          onClick={ () => generatePDF() }
          > Gerar Prescrição </Button>
      </div>
    </>
  )
}
